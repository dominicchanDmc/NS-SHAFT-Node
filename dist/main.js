(function(){"use strict";var __webpack_modules__={869:function(){eval("\n;// CONCATENATED MODULE: ./src/script/player.js\n//const maxLife = 3;\n\nclass PlayerObj {\n  constructor() {\n    this.x = 200;\n    this.y = 300;\n    this.width = 40;\n    this.height = 40;\n    this.speed = 200;\n    this.life = 3;\n    this.stair = 0;\n    this.state = 0;\n    this.color = '#FF8000';\n  }\n}\n/* harmony default export */ var player = (PlayerObj);\n;// CONCATENATED MODULE: ./src/script/block.js\n// function block(a,b){\n//     this.x= a;\n//     this.y= b;\n//     this.width= 150;\n//     this.height= 30;\n//     this.mod = 0;\n//     this.color = '#198e99';\n// };\n\nclass BlockObj {\n  constructor(a, b) {\n    this.x = a;\n    this.y = b;\n    this.width = 150;\n    this.height = 30;\n    this.mod = 0;\n    this.color = '#198e99';\n  }\n}\n/* harmony default export */ var block = (BlockObj);\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n//--------param\nconst statusSt = 'Start';\nconst bgpic = new Image();\nbgpic.src = \"./assets/bg.jpg\";\nconst toppic = new Image();\ntoppic.src = \"./assets/top.jpg\";\nconst stand = new Image();\nstand.src = \"./assets/1.png\";\nconst blockpic = new Image();\nblockpic.src = \"./assets/block.jpg\";\nlet canvasB, ctxB, canvasM, ctxM;\nlet gameStatus = statusSt;\nlet src_player = new player();\n\n//-------------------------\nfunction render() {\n  canvasB = document.getElementById('canvasBoard');\n  ctxB = canvasB.getContext('2d');\n  canvasM = document.getElementById('canvasMove');\n  ctxM = canvasM.getContext('2d');\n  canvasB.width = 480;\n  canvasB.height = 740;\n  canvasM.width = 480;\n  canvasM.height = 300;\n  if (gameStatus == statusSt) {\n    ctxB.drawImage(bgpic, 0, 0, canvasB.width, canvasB.height);\n    if (src_player.state == 0) ctxB.drawImage(stand, src_player.x, src_player.y, src_player.width, src_player.height);\n    ctxB.drawImage(toppic, 0, 0, canvasB.width, 40);\n    for (let i = 0; i < 10; i++) {\n      if (src_Array[i].mod == 0) ctxB.drawImage(blockpic, src_Array[i].x, src_Array[i].y, src_Array[i].width, src_Array[i].height);else if (src_Array[i].mod == 1) ctxB.drawImage(spic, src_Array[i].x, src_Array[i].y, src_Array[i].width, src_Array[i].height);else if (src_Array[i].mod == 2) ctxB.drawImage(kpic, src_Array[i].x, src_Array[i].y, src_Array[i].width, src_Array[i].height);else if (src_Array[i].mod == 3) ctxB.drawImage(jpic, src_Array[i].x, src_Array[i].y, src_Array[i].width, src_Array[i].height);else {\n        ctxB.fillStyle = src_Array[i].color;\n        ctxB.fillRect(src_Array[i].x, src_Array[i].y, src_Array[i].width, src_Array[i].height);\n      }\n    }\n  }\n}\nfunction run() {\n  // update((Date.now() - time) / 1000);\n  render();\n  time = Date.now();\n}\nvar time = Date.now();\nsetInterval(run, 40);\nlet src_Array = [];\nsrc_Array[0] = new block(150, 600);\nfor (let i = 1; i < 10; i++) {\n  // let r = Math.random() * canvasB.width-100;\n  let r = Math.random() * 380;\n  let de = (Math.random() * 10 + 10 + i * 4) * 40;\n  /// Avoid Overlapping\n  while (1) {\n    // r = Math.random() * canvasB.width-100;\n    r = Math.random() * 380;\n    de = (Math.random() * 10 + 10 + i * 4) * 40;\n    let overlap = false;\n    for (let j = 0; j < i; j++) {\n      if (i == j) continue;\n      if (Math.abs(r - src_Array[j].x) <= 200 && Math.abs(de - src_Array[j].y) <= 60) {\n        overlap = true;\n        //console.log(\"overlap!\");\n        break;\n      }\n    }\n    if (!overlap) break;\n  }\n  /////////////////////////////////////\n  // if(i == 3 || i == 9 ) Array[i] = new s_block(r,de);\n  // else if ( i == 2 || i == 7) Array[i] = new k_block(r,de);\n  // else if ( i == 5 ) Array[i] = new j_block(r,de);\n  // else Array[i] = new BlockObj(r,de);\n  if (i == 3 || i == 9) src_Array[i] = new block(r, de);else if (i == 2 || i == 7) src_Array[i] = new block(r, de);else if (i == 5) src_Array[i] = new block(r, de);else src_Array[i] = new block(r, de);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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R2hCLENBQUMsSUFBSSxDQUFDLElBQUlBLENBQUMsSUFBSSxDQUFDLEVBQUdDLFNBQUssQ0FBQ0QsQ0FBQyxDQUFDLEdBQUcsSUFBSXRCLEtBQVEsQ0FBQ2tDLENBQUMsRUFBQ0csRUFBRSxDQUFDLENBQUMsS0FDL0MsSUFBS2YsQ0FBQyxJQUFJLENBQUMsSUFBSUEsQ0FBQyxJQUFJLENBQUMsRUFBRUMsU0FBSyxDQUFDRCxDQUFDLENBQUMsR0FBRyxJQUFJdEIsS0FBUSxDQUFDa0MsQ0FBQyxFQUFDRyxFQUFFLENBQUMsQ0FBQyxLQUNyRCxJQUFLZixDQUFDLElBQUksQ0FBQyxFQUFHQyxTQUFLLENBQUNELENBQUMsQ0FBQyxHQUFHLElBQUl0QixLQUFRLENBQUNrQyxDQUFDLEVBQUNHLEVBQUUsQ0FBQyxDQUFDLEtBQzVDZCxTQUFLLENBQUNELENBQUMsQ0FBQyxHQUFHLElBQUl0QixLQUFRLENBQUNrQyxDQUFDLEVBQUNHLEVBQUUsQ0FBQztBQUN0QyIsInNvdXJjZXMiOlsid2VicGFjazovL25zLXNoYWZ0LW5vZGUvLi9zcmMvc2NyaXB0L3BsYXllci5qcz84YTAyIiwid2VicGFjazovL25zLXNoYWZ0LW5vZGUvLi9zcmMvc2NyaXB0L2Jsb2NrLmpzP2M4MjYiLCJ3ZWJwYWNrOi8vbnMtc2hhZnQtbm9kZS8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vY29uc3QgbWF4TGlmZSA9IDM7XHJcblxyXG5jbGFzcyBQbGF5ZXJPYmp7XHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMueCA9IDIwMDsgXHJcbiAgICAgICAgdGhpcy55PSAzMDA7ICAgXHJcbiAgICAgICAgdGhpcy53aWR0aD0gNDA7XHJcbiAgICAgICAgdGhpcy5oZWlnaHQ9IDQwOyAgXHJcbiAgICAgICAgdGhpcy5zcGVlZD0gMjAwOyAgIFxyXG4gICAgICAgIHRoaXMubGlmZT0gMztcclxuICAgICAgICB0aGlzLnN0YWlyPTA7ICAgICAgXHJcbiAgICAgICAgdGhpcy5zdGF0ZT0wO1xyXG4gICAgICAgIHRoaXMuY29sb3I9ICcjRkY4MDAwJztcclxuICAgIH1cclxufSBcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBsYXllck9iajsgIiwiLy8gZnVuY3Rpb24gYmxvY2soYSxiKXtcclxuLy8gICAgIHRoaXMueD0gYTtcclxuLy8gICAgIHRoaXMueT0gYjtcclxuLy8gICAgIHRoaXMud2lkdGg9IDE1MDtcclxuLy8gICAgIHRoaXMuaGVpZ2h0PSAzMDtcclxuLy8gICAgIHRoaXMubW9kID0gMDtcclxuLy8gICAgIHRoaXMuY29sb3IgPSAnIzE5OGU5OSc7XHJcbi8vIH07XHJcblxyXG5cclxuY2xhc3MgQmxvY2tPYmp7XHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKGEsYikge1xyXG4gICAgICAgIHRoaXMueD0gYTtcclxuICAgICAgICB0aGlzLnk9IGI7XHJcbiAgICAgICAgdGhpcy53aWR0aD0gMTUwO1xyXG4gICAgICAgIHRoaXMuaGVpZ2h0PSAzMDtcclxuICAgICAgICB0aGlzLm1vZCA9IDA7XHJcbiAgICAgICAgdGhpcy5jb2xvciA9ICcjMTk4ZTk5JztcclxuICAgIH1cclxufSBcclxuXHJcbmV4cG9ydCBkZWZhdWx0IEJsb2NrT2JqOyAiLCJpbXBvcnQgUGxheWVyT2JqIGZyb20gXCIuL3NjcmlwdC9wbGF5ZXIuanNcIlxyXG5pbXBvcnQgQmxvY2tPYmogZnJvbSBcIi4vc2NyaXB0L2Jsb2NrLmpzXCI7XHJcblxyXG4vLy0tLS0tLS0tcGFyYW1cclxuY29uc3Qgc3RhdHVzU3QgPSAnU3RhcnQnO1xyXG5cclxuY29uc3QgYmdwaWM9bmV3IEltYWdlKCk7XHJcblx0XHRiZ3BpYy5zcmM9XCIuL2Fzc2V0cy9iZy5qcGdcIjtcclxuY29uc3QgdG9wcGljPW5ldyBJbWFnZSgpO1xyXG5cdFx0IHRvcHBpYy5zcmM9XCIuL2Fzc2V0cy90b3AuanBnXCI7XHJcbmNvbnN0IHN0YW5kPW5ldyBJbWFnZSgpO1xyXG5cdFx0IHN0YW5kLnNyYz1cIi4vYXNzZXRzLzEucG5nXCI7XHJcbmNvbnN0IGJsb2NrcGljPW5ldyBJbWFnZSgpO1xyXG5cdFx0YmxvY2twaWMuc3JjPVwiLi9hc3NldHMvYmxvY2suanBnXCI7XHJcbmxldCBjYW52YXNCLGN0eEIsY2FudmFzTSxjdHhNO1xyXG5cclxuXHJcblxyXG5sZXQgZ2FtZVN0YXR1cyA9IHN0YXR1c1N0O1xyXG5sZXQgcGxheWVyID0gbmV3IFBsYXllck9iaigpO1xyXG5cclxuXHJcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5mdW5jdGlvbiByZW5kZXIoKSB7XHJcbiAgICBjYW52YXNCID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhbnZhc0JvYXJkJyk7XHJcbiAgICBjdHhCID0gY2FudmFzQi5nZXRDb250ZXh0KCcyZCcpO1xyXG4gICAgY2FudmFzTSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYW52YXNNb3ZlJyk7IFxyXG4gICAgY3R4TSA9IGNhbnZhc00uZ2V0Q29udGV4dCgnMmQnKTtcclxuICAgIGNhbnZhc0Iud2lkdGggPSA0ODA7XHJcbiAgICBjYW52YXNCLmhlaWdodCA9IDc0MDtcclxuICAgIGNhbnZhc00ud2lkdGggPSA0ODA7XHJcbiAgICBjYW52YXNNLmhlaWdodCA9IDMwMDtcclxuICAgIGlmKGdhbWVTdGF0dXMgPT0gc3RhdHVzU3QgKXtcclxuICAgICAgICBjdHhCLmRyYXdJbWFnZShiZ3BpYywwLDAsY2FudmFzQi53aWR0aCxjYW52YXNCLmhlaWdodCk7XHJcbiAgICAgICAgaWYocGxheWVyLnN0YXRlID09IDAgKSBcclxuICAgICAgICAgICAgY3R4Qi5kcmF3SW1hZ2Uoc3RhbmQscGxheWVyLngscGxheWVyLnkscGxheWVyLndpZHRoLHBsYXllci5oZWlnaHQpO1xyXG5cclxuICAgICAgICBjdHhCLmRyYXdJbWFnZSh0b3BwaWMsMCwwLGNhbnZhc0Iud2lkdGgsNDApO1xyXG4gICAgICAgIGZvcihsZXQgaSA9IDAgOyBpIDwgMTAgOyBpKyspe1xyXG4gICAgICAgICAgICBpZihBcnJheVtpXS5tb2QgPT0gMCkgY3R4Qi5kcmF3SW1hZ2UoYmxvY2twaWMsQXJyYXlbaV0ueCwgQXJyYXlbaV0ueSwgQXJyYXlbaV0ud2lkdGgsIEFycmF5W2ldLmhlaWdodCk7XHJcbiAgICAgICAgICAgIGVsc2UgaWYgIChBcnJheVtpXS5tb2QgPT0gMSkgY3R4Qi5kcmF3SW1hZ2Uoc3BpYyxBcnJheVtpXS54LCBBcnJheVtpXS55LCBBcnJheVtpXS53aWR0aCwgQXJyYXlbaV0uaGVpZ2h0KTtcclxuICAgICAgICAgICAgZWxzZSBpZiAgKEFycmF5W2ldLm1vZCA9PSAyKSBjdHhCLmRyYXdJbWFnZShrcGljLEFycmF5W2ldLngsIEFycmF5W2ldLnksIEFycmF5W2ldLndpZHRoLCBBcnJheVtpXS5oZWlnaHQpO1xyXG4gICAgICAgICAgICBlbHNlIGlmICAoQXJyYXlbaV0ubW9kID09IDMpIGN0eEIuZHJhd0ltYWdlKGpwaWMsQXJyYXlbaV0ueCwgQXJyYXlbaV0ueSwgQXJyYXlbaV0ud2lkdGgsIEFycmF5W2ldLmhlaWdodCk7XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICBjdHhCLmZpbGxTdHlsZSA9IEFycmF5W2ldLmNvbG9yO1xyXG4gICAgICAgICAgICAgICAgY3R4Qi5maWxsUmVjdChBcnJheVtpXS54LCBBcnJheVtpXS55LCBBcnJheVtpXS53aWR0aCwgQXJyYXlbaV0uaGVpZ2h0KTtcclxuICAgICAgICAgICAgfVx0XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBydW4oKSB7XHJcbiAgIC8vIHVwZGF0ZSgoRGF0ZS5ub3coKSAtIHRpbWUpIC8gMTAwMCk7XHJcbiAgICByZW5kZXIoKTtcclxuICAgIHRpbWUgPSBEYXRlLm5vdygpO1xyXG59XHJcblxyXG52YXIgdGltZSA9IERhdGUubm93KCk7XHJcbnNldEludGVydmFsKHJ1biwgNDApO1xyXG5cclxubGV0IEFycmF5ID0gW107XHJcbkFycmF5WzBdID0gbmV3IEJsb2NrT2JqKDE1MCw2MDApO1xyXG5mb3IoIGxldCBpID0gMSA7IGkgPCAxMCA7IGkrKyl7XHJcbiAgICAvLyBsZXQgciA9IE1hdGgucmFuZG9tKCkgKiBjYW52YXNCLndpZHRoLTEwMDtcclxuICAgIGxldCByID0gTWF0aC5yYW5kb20oKSAqIDM4MDtcclxuICAgIGxldCBkZSA9IChNYXRoLnJhbmRvbSgpICogMTArMTAraSo0KSo0MCA7XHJcbiAgICAvLy8gQXZvaWQgT3ZlcmxhcHBpbmdcclxuICAgIHdoaWxlKDEpXHJcbiAgICB7XHJcbiAgICAgICAgLy8gciA9IE1hdGgucmFuZG9tKCkgKiBjYW52YXNCLndpZHRoLTEwMDtcclxuICAgICAgICByID0gTWF0aC5yYW5kb20oKSAqIDM4MDtcclxuICAgICAgICBkZSA9IChNYXRoLnJhbmRvbSgpICogMTArMTAraSo0KSo0MCA7XHJcbiAgICAgICAgbGV0IG92ZXJsYXAgPSBmYWxzZTtcclxuICAgICAgICBmb3IobGV0IGogPSAwIDsgaiA8IGkgOyBqKyspXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpZihpPT1qKSBjb250aW51ZTtcclxuICAgICAgICAgICAgaWYoIChNYXRoLmFicyhyLUFycmF5W2pdLngpPD0yMDApICYmIChNYXRoLmFicyhkZS1BcnJheVtqXS55KTw9NjApICApXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIG92ZXJsYXAgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcIm92ZXJsYXAhXCIpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYoIW92ZXJsYXApIGJyZWFrO1xyXG4gICAgfVxyXG4gICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4gICAgLy8gaWYoaSA9PSAzIHx8IGkgPT0gOSApIEFycmF5W2ldID0gbmV3IHNfYmxvY2socixkZSk7XHJcbiAgICAvLyBlbHNlIGlmICggaSA9PSAyIHx8IGkgPT0gNykgQXJyYXlbaV0gPSBuZXcga19ibG9jayhyLGRlKTtcclxuICAgIC8vIGVsc2UgaWYgKCBpID09IDUgKSBBcnJheVtpXSA9IG5ldyBqX2Jsb2NrKHIsZGUpO1xyXG4gICAgLy8gZWxzZSBBcnJheVtpXSA9IG5ldyBCbG9ja09iaihyLGRlKTtcclxuICAgIGlmKGkgPT0gMyB8fCBpID09IDkgKSBBcnJheVtpXSA9IG5ldyBCbG9ja09iaihyLGRlKTtcclxuICAgIGVsc2UgaWYgKCBpID09IDIgfHwgaSA9PSA3KSBBcnJheVtpXSA9IG5ldyBCbG9ja09iaihyLGRlKTtcclxuICAgIGVsc2UgaWYgKCBpID09IDUgKSBBcnJheVtpXSA9IG5ldyBCbG9ja09iaihyLGRlKTtcclxuICAgIGVsc2UgQXJyYXlbaV0gPSBuZXcgQmxvY2tPYmoocixkZSk7XHJcbn1cclxuIl0sIm5hbWVzIjpbIlBsYXllck9iaiIsImNvbnN0cnVjdG9yIiwieCIsInkiLCJ3aWR0aCIsImhlaWdodCIsInNwZWVkIiwibGlmZSIsInN0YWlyIiwic3RhdGUiLCJjb2xvciIsIkJsb2NrT2JqIiwiYSIsImIiLCJtb2QiLCJzdGF0dXNTdCIsImJncGljIiwiSW1hZ2UiLCJzcmMiLCJ0b3BwaWMiLCJzdGFuZCIsImJsb2NrcGljIiwiY2FudmFzQiIsImN0eEIiLCJjYW52YXNNIiwiY3R4TSIsImdhbWVTdGF0dXMiLCJwbGF5ZXIiLCJyZW5kZXIiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiZ2V0Q29udGV4dCIsImRyYXdJbWFnZSIsImkiLCJBcnJheSIsInNwaWMiLCJrcGljIiwianBpYyIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwicnVuIiwidGltZSIsIkRhdGUiLCJub3ciLCJzZXRJbnRlcnZhbCIsInIiLCJNYXRoIiwicmFuZG9tIiwiZGUiLCJvdmVybGFwIiwiaiIsImFicyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///869\n")},335:function(){eval("// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzM1LmpzIiwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnMtc2hhZnQtbm9kZS8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///335\n")}};__webpack_modules__[869]();var __webpack_exports__={};__webpack_modules__[335]()})();