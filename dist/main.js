(function(){"use strict";var __webpack_modules__={879:function(){eval('\n;// CONCATENATED MODULE: ./src/script/player.js\n//const maxLife = 3;\n\nclass PlayerObj {\n  constructor() {\n    this.x = 200;\n    this.y = 300;\n    this.width = 40;\n    this.height = 40;\n    this.speed = 150;\n    this.life = 5;\n    this.recondFloor = 0;\n    this.state = 0;\n    this.color = \'#FF8000\';\n  }\n}\n/* harmony default export */ var player = (PlayerObj);\n;// CONCATENATED MODULE: ./src/script/block.js\nclass BlockObj {\n  constructor(a, b) {\n    this.x = a;\n    this.y = b;\n    this.width = 150;\n    this.height = 30;\n    this.mod = 0;\n    this.color = \'#198e99\';\n  }\n}\n/* harmony default export */ var block = (BlockObj);\n;// CONCATENATED MODULE: ./src/script/j_Block.js\nclass J_BlockObj {\n  constructor(a, b) {\n    this.x = a;\n    this.y = b;\n    this.width = 130;\n    this.height = 30;\n    this.mod = 3;\n    this.color = \'#FFFF00\';\n  }\n}\n;\n/* harmony default export */ var j_Block = (J_BlockObj);\n;// CONCATENATED MODULE: ./src/script/d_Block.js\nclass D_BlockObj {\n  constructor(a, b) {\n    this.x = a;\n    this.y = b;\n    this.width = 150;\n    this.height = 30;\n    this.mod = 2;\n    this.color = \'#f70519\';\n  }\n}\n;\n/* harmony default export */ var d_Block = (D_BlockObj);\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n//--------param\nconst statusStart = \'Start\';\nconst statusEnd = \'End\';\nconst standHold = 0,\n  leftMoveAction = 1,\n  rightMoveAction = 2;\nconst bgpic = new Image();\nbgpic.src = "./assets/bg.jpg";\nconst toppic = new Image();\ntoppic.src = "./assets/top.jpg";\nconst stand = new Image();\nstand.src = "./assets/1.png";\nconst blockPic = new Image();\nblockPic.src = "./assets/block.jpg";\nconst j_blockPic = new Image();\nj_blockPic.src = "./assets/jblock.jpg";\nconst d_blockPic = new Image();\nd_blockPic.src = "./assets/dblock.jpg";\nconst leftpic = new Image();\nleftpic.src = "./assets/left.png";\nconst rightpic = new Image();\nrightpic.src = "./assets/right.png";\nconst gameOverPic = new Image();\ngameOverPic.src = "./assets/gameOver.jpg";\nlet canvasB, ctxB, canvasM, ctxM;\nlet gameStatus = statusStart;\nlet endStatus = false;\nlet src_player = new player();\nlet keysDown = {};\nlet speed = 7;\nlet up = 0,\n  up2 = 0;\nlet down = 1,\n  down2 = 1;\nlet m_y = 0,\n  m_y2 = 0,\n  flag3 = 0;\nlet leftMove = 0,\n  rightMove = 0,\n  r = 0;\nlet ms = 250;\nlet recondFloor = 0;\n\n//-------------------------\nfunction render() {\n  canvasB = document.getElementById(\'canvasBoard\');\n  ctxB = canvasB.getContext(\'2d\');\n  canvasM = document.getElementById(\'canvasMove\');\n  ctxM = canvasM.getContext(\'2d\');\n  canvasB.width = 480;\n  canvasB.height = 740;\n  canvasM.width = 480;\n  canvasM.height = 300;\n  window.addEventListener(\'keydown\', function (e) {\n    keysDown[e.keyCode] = true;\n  });\n  window.addEventListener(\'keyup\', function (e) {\n    delete keysDown[e.keyCode];\n  });\n  /////move by touch\n  canvasB.addEventListener("touchstart", function (e) {\n    touches = e.touches[0];\n    // tou = 1;\n  });\n  canvasB.addEventListener("touchmove", function (e) {\n    var t = e.touches[0];\n    if (t.pageX < touches.pageX && src_player.x > 0 && src_player.x < 560) {\n      src_player.x -= src_player.speed * 0.015;\n      src_player.state = 1;\n      if (src_player.x <= 0) src_player.x = 1;\n    } else if (t.pageX > touches.pageX && src_player.x > 0 && src_player.x < 560) {\n      src_player.x += src_player.speed * 0.015;\n      src_player.state = 2;\n      if (src_player.x >= 560) src_player.x = canvasB.width - 41;\n    } else src_player.state = 0;\n    //alert(touches.pageX);\n  });\n  canvasB.addEventListener(\'mouseDown\', mouseDown, false);\n  function mouseDown() {\n    alert();\n    // var x = e.clientX;\n    // var y = e.clientY;\n    // if (end == 1 && (game == 0 || game == 2 )&& x > 140 && x < 360 && y>520 &&y<580) { //restart\n    // \tflag3 =0;\n    // \tplayer =0;\n    // \twin =0;\n    // \tend = 0;\t\t\n    // \tplayer.x= 200;\n    // \tplayer.y= 300;\n    // \tplayer.life=fulllife;\n    // \tplayer.recondFloor=0;\n    // \tplayer.state=0;\n    // \trecondFloor  =0;\n    // \tmouse = 0;\n    // \tgame = 0;\n    // \tstart = 1;\n    // \tplayer.speed = 250;\n    // \tspeed = 5;\t\n    // }\t\t\n  }\n  if (gameStatus == statusStart) {\n    ctxB.drawImage(bgpic, 0, 0, canvasB.width, canvasB.height);\n    if (src_player.state == standHold) ctxB.drawImage(stand, src_player.x, src_player.y, src_player.width, src_player.height);else if (src_player.state == leftMoveAction) {\n      ctxB.drawImage(leftpic, leftMove, 0, src_player.width, src_player.height, src_player.x, src_player.y, src_player.width, src_player.height);\n      leftMove += 50;\n      if (leftMove >= 200) leftMove = 0;\n    } else if (src_player.state == rightMoveAction) {\n      ctxB.drawImage(rightpic, rightMove, 0, src_player.width, src_player.height, src_player.x, src_player.y, src_player.width, src_player.height);\n      rightMove += 50;\n      if (rightMove >= 200) rightMove = 0;\n    }\n    ctxB.drawImage(toppic, 0, 0, canvasB.width, 40);\n    for (let i = 0; i < 10; i++) {\n      if (BlockArray[i].mod == 0) ctxB.drawImage(blockPic, BlockArray[i].x, BlockArray[i].y, BlockArray[i].width, BlockArray[i].height);else if (BlockArray[i].mod == 1) ctxB.drawImage(spic, BlockArray[i].x, BlockArray[i].y, BlockArray[i].width, BlockArray[i].height);else if (BlockArray[i].mod == 2) ctxB.drawImage(d_blockPic, BlockArray[i].x, BlockArray[i].y, BlockArray[i].width, BlockArray[i].height);else if (BlockArray[i].mod == 3) ctxB.drawImage(j_blockPic, BlockArray[i].x, BlockArray[i].y, BlockArray[i].width, BlockArray[i].height);else {\n        ctxB.fillStyle = BlockArray[i].color;\n        ctxB.fillRect(BlockArray[i].x, BlockArray[i].y, BlockArray[i].width, BlockArray[i].height);\n      }\n    }\n    recondFloor++;\n  } else if (gameStatus == statusEnd && endStatus) {\n    ctxB.clearRect(0, 0, canvasM.width, canvasM.height);\n    let grd = ctxB.createLinearGradient(240, 0, 240, 640);\n    grd.addColorStop(0, "#eff2f7");\n    grd.addColorStop(1, "#052459");\n    ctxB.fillStyle = grd;\n    ctxB.fillRect(0, 0, canvasM.width, canvasM.height);\n    ctxB.font = "60px Verdana";\n    ctxB.fillStyle = "#FFA500";\n    ctxB.fillText("Game Over", 70, 100);\n    ctxB.lineWidth = 3;\n    ctxB.strokeStyle = "#8A0808";\n    ctxB.strokeText("Game Over", 70, 100);\n    src_player.life = 0;\n    ctxB.drawImage(gameOverPic, 100, 200, 280, 280);\n    ctxB.fillStyle = "#FFA500";\n    ctxB.fillRect(140, 520, 200, 50);\n    ctxB.lineWidth = 4;\n    ctxB.strokeStyle = "#8A0808";\n    ctxB.strokeRect(140, 520, 200, 50);\n    ctxB.font = "40px Verdana";\n    ctxB.fillStyle = "#FFA500";\n    ctxB.fillText("restart", 170, 560);\n    ctxB.lineWidth = 2;\n    ctxB.strokeStyle = "#8A0808";\n    ctxB.strokeText("restart", 170, 560);\n  } else {\n    src_player.recondFloor = Math.floor(recondFloor / 70);\n    ctxM.clearRect(0, 0, canvasM.width, canvasM.height);\n    ctxM.font = "60px Verdana";\n    ctxM.fillStyle = "#F7A619";\n    ctxM.fillText("LIFE = " + src_player.life, 30, 80);\n    ctxM.lineWidth = 2;\n    ctxM.strokeStyle = "#0EA418";\n    ctxM.strokeText("LIFE = " + src_player.life, 30, 80);\n    ctxM.font = "60px Verdana";\n    ctxM.fillStyle = "#F7A619";\n    ctxM.fillText("RecondFloor = " + src_player.recondFloor, 30, 150);\n    ctxM.lineWidth = 2;\n    ctxM.strokeStyle = "#0EA418";\n    ctxM.strokeText("RecondFloor = " + src_player.recondFloor, 30, 150);\n    if (localStorage.getItem(\'rec\') < src_player.recondFloor && endStatus) localStorage[\'rec\'] = src_player.recondFloor;\n    ctxM.font = "60px Verdana";\n    ctxM.fillStyle = "#F7A619";\n    if (localStorage.getItem(\'rec\') == null) ctxM.fillText("RECORD = 0", 30, 220);else ctxM.fillText("RECORD =" + localStorage.getItem(\'rec\'), 30, 220);\n    ctxM.lineWidth = 2;\n    ctxM.strokeStyle = "#0EA418";\n    if (localStorage.getItem(\'rec\') == null) ctxM.strokeText("RECORD = 0", 30, 220);else ctxM.strokeText("RECORD =" + localStorage.getItem(\'rec\'), 30, 220);\n  }\n}\nfunction update(mod) {\n  // if(game == 1){\n  if (37 in keysDown && src_player.x >= 0 && src_player.x < canvasB.width - 40) {\n    src_player.x -= src_player.speed * mod;\n    src_player.state = 1;\n    if (src_player.x <= 0) src_player.x = 1;\n  } else if (39 in keysDown && src_player.x >= 0 && src_player.x < canvasB.width - 40) {\n    src_player.x += src_player.speed * mod;\n    src_player.state = 2;\n    if (src_player.x >= canvasB.width - 40) src_player.x = canvasB.width - 41;\n  }\n  for (let i = 0; i < 10; i++) {\n    BlockArray[i].y -= speed;\n  }\n  for (let i = 0; i < 10; i++) {\n    if (src_player.y <= BlockArray[i].y && src_player.y >= BlockArray[i].y - 40 && src_player.x > BlockArray[i].x - 20 && src_player.x < BlockArray[i].x + 150) {\n      up = 1;\n      m_y = i;\n      break;\n    } else up = 0;\n  }\n  if (up == 1) {\n    src_player.y = BlockArray[m_y].y - 40;\n    if (BlockArray[m_y].mod == 1) {\n      // if(flag == 0 &&player.life< fulllife ) player.life++;\n      // flag = 1;\n      src_player.speed = ms / 3;\n    } else if (BlockArray[m_y].mod == 2) {\n      // if(flag == 0)player.life -= 5;\n      // flag = 1;\n      src_player.speed = ms;\n    } else if (BlockArray[m_y].mod == 3) {\n      // if(flag == 0 &&player.life< fulllife ) player.life++;\n      src_player.speed = ms * 1.5;\n      src_player.y -= 100;\n      // flag = 1;\n    } else {\n      // if(flag == 0 &&player.life< fulllife ) player.life++;\n      src_player.speed = ms;\n      // flag = 1;\n    }\n  } else {\n    if (src_player.y < 35) {\n      src_player.life -= 5;\n      src_player.y = 35;\n    }\n    src_player.y += 10;\n    src_player.speed = ms;\n    // flag = 0;\n  }\n  if (canvasB != undefined && (src_player.y > canvasB.height || src_player.life <= 0)) {\n    gameStatus = statusEnd;\n    endStatus = true;\n  }\n  // console.log(flag+"  "+player.life + "   " + player.speed);\n  if (src_player.stair > 95) speed = 15;else if (src_player.stair > 80) speed = 14;else if (src_player.stair > 65) speed = 10;else if (src_player.stair > 50) speed = 10;else if (src_player.stair > 35) speed = 9;else if (src_player.stair > 20) speed = 8;\n  for (let i = 0; i < 10; i++) {\n    if (BlockArray[i].y <= 30) {\n      BlockArray[i].y = canvasB.height + (Math.random() * 10 + 1) * (Math.random() * 50 + 50) + 100;\n      BlockArray[i].x = Math.random() * canvasB.width - 100;\n      /// Avoid Overlapping\n      while (1) {\n        BlockArray[i].y = canvasB.height + (Math.random() * 10 + 1) * (Math.random() * 50 + 50) + 100;\n        BlockArray[i].x = Math.random() * canvasB.width - 100;\n        var overlap = false;\n        for (let j = 0; j < 10; j++) {\n          if (i == j) continue;\n          if (Math.abs(BlockArray[i].x - BlockArray[j].x) <= 200 && Math.abs(BlockArray[i].y - BlockArray[j].y) <= 60) {\n            overlap = true;\n            //console.log("overlap!");\n            break;\n          }\n        }\n        //console.log(overlap);\n        if (!overlap) break;\n      }\n      /////////////////////////////////////\n    }\n  }\n  //}\n}\nfunction run() {\n  update((Date.now() - time) / 1000);\n  render();\n  time = Date.now();\n}\nvar time = Date.now();\nsetInterval(run, 35);\nlet BlockArray = [];\nBlockArray[0] = new block(150, 600);\nfor (let i = 1; i < 10; i++) {\n  let r;\n  if (canvasB != null && canvasB.width != null) r = Math.random() * canvasB.width - 150;else r = Math.random() * 380;\n  //let r = Math.random() * 380;\n  let de = (Math.random() * 20 + i * 4) * 40;\n  /// Avoid Overlapping\n  while (1) {\n    if (canvasB != null && canvasB.width != null) r = Math.random() * canvasB.width - 150;else r = Math.random() * 380;\n    // = Math.random() * canvasB.width-100;\n    //r = Math.random() * 380;\n    de = (Math.random() * 20 + i * 4) * 40;\n    let overlap = false;\n    for (let j = 0; j < i; j++) {\n      if (i == j) continue;\n      if (Math.abs(r - BlockArray[j].x) <= 200 && Math.abs(de - BlockArray[j].y) <= 60) {\n        overlap = true;\n        //console.log("overlap!");\n        break;\n      }\n    }\n    if (!overlap) break;\n  }\n  /////////////////////////////////////\n  if (i == 3 || i == 9) BlockArray[i] = new d_Block(r, de);else if (i == 2 || i == 7) BlockArray[i] = new block(r, de);else if (i == 5) BlockArray[i] = new j_Block(r, de);else BlockArray[i] = new block(r, de);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///879\n')},335:function(){eval("// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzM1LmpzIiwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbnMtc2hhZnQtbm9kZS8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///335\n")}};__webpack_modules__[879]();var __webpack_exports__={};__webpack_modules__[335]()})();